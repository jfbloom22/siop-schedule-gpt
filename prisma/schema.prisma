generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["driverAdapters"]
  binaryTargets   = ["native", "debian-openssl-1.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Track {
  id       Int       @id @default(autoincrement())
  name     String    @unique @db.VarChar(255)
  sessions Session[] @relation("SessionToTrack")

  @@map("tracks")
}

model Speaker {
  id          Int          @id @default(autoincrement())
  name        String       @unique @db.VarChar(255)
  sessions    Session[]    @relation("SessionToSpeaker")
  subSessions SubSession[] @relation("SubSessionToSpeaker")

  @@map("speakers")
}

model Session {
  id          Int          @id @default(autoincrement())
  name        String       @db.VarChar(255)
  startTime   DateTime     @db.Time
  endTime     DateTime     @db.Time
  date        DateTime     @db.Date
  location    String?      @db.VarChar(255)
  description String?      @db.Text
  sessionId   String?      @db.VarChar(50)
  isVirtual   Boolean      @default(false)
  eventName   String?      @db.VarChar(255)
  timezone    String?      @db.VarChar(50)
  tracks      Track[]      @relation("SessionToTrack")
  speakers    Speaker[]    @relation("SessionToSpeaker")
  subSessions SubSession[]

  @@map("sessions")
}

model SubSession {
  id              Int       @id @default(autoincrement())
  parentSession   Session   @relation(fields: [parentSessionId], references: [id])
  parentSessionId Int
  name            String    @db.VarChar(255)
  description     String?   @db.Text
  speakers        Speaker[] @relation("SubSessionToSpeaker")

  @@map("sub_sessions")
}
